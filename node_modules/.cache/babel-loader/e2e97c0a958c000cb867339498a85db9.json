{"ast":null,"code":"import _slicedToArray from\"D:\\\\Projects\\\\react-material-dashboard-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"D:\\\\Projects\\\\react-material-dashboard-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";import React,{useState}from'react';import clsx from'clsx';import moment from'moment';import PerfectScrollbar from'react-perfect-scrollbar';import{Avatar,Box,Card,Checkbox,Table,TableBody,TableCell,TableHead,TablePagination,TableRow,Typography,makeStyles}from'@material-ui/core';import getInitials from'src/utils/getInitials';var useStyles=makeStyles(function(theme){return{root:{},avatar:{marginRight:theme.spacing(2)}};});var Results=function Results(_ref){var className=_ref.className,customers=_ref.customers,rest=_objectWithoutProperties(_ref,[\"className\",\"customers\"]);var classes=useStyles();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),selectedCustomerIds=_useState2[0],setSelectedCustomerIds=_useState2[1];var _useState3=useState(10),_useState4=_slicedToArray(_useState3,2),limit=_useState4[0],setLimit=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),page=_useState6[0],setPage=_useState6[1];var handleSelectAll=function handleSelectAll(event){var newSelectedCustomerIds;if(event.target.checked){newSelectedCustomerIds=customers.map(function(customer){return customer.id;});}else{newSelectedCustomerIds=[];}setSelectedCustomerIds(newSelectedCustomerIds);};var handleSelectOne=function handleSelectOne(event,id){var selectedIndex=selectedCustomerIds.indexOf(id);var newSelectedCustomerIds=[];if(selectedIndex===-1){newSelectedCustomerIds=newSelectedCustomerIds.concat(selectedCustomerIds,id);}else if(selectedIndex===0){newSelectedCustomerIds=newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));}else if(selectedIndex===selectedCustomerIds.length-1){newSelectedCustomerIds=newSelectedCustomerIds.concat(selectedCustomerIds.slice(0,-1));}else if(selectedIndex>0){newSelectedCustomerIds=newSelectedCustomerIds.concat(selectedCustomerIds.slice(0,selectedIndex),selectedCustomerIds.slice(selectedIndex+1));}setSelectedCustomerIds(newSelectedCustomerIds);};var handleLimitChange=function handleLimitChange(event){setLimit(event.target.value);};var handlePageChange=function handlePageChange(event,newPage){setPage(newPage);};return/*#__PURE__*/React.createElement(Card,Object.assign({className:clsx(classes.root,className)},rest),/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(Box,{minWidth:1050},/*#__PURE__*/React.createElement(Table,null,/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{padding:\"checkbox\"},/*#__PURE__*/React.createElement(Checkbox,{checked:selectedCustomerIds.length===customers.length,color:\"primary\",indeterminate:selectedCustomerIds.length>0&&selectedCustomerIds.length<customers.length,onChange:handleSelectAll})),/*#__PURE__*/React.createElement(TableCell,null,\"Name\"),/*#__PURE__*/React.createElement(TableCell,null,\"Email\"),/*#__PURE__*/React.createElement(TableCell,null,\"Location\"),/*#__PURE__*/React.createElement(TableCell,null,\"Phone\"),/*#__PURE__*/React.createElement(TableCell,null,\"Registration date\"))),/*#__PURE__*/React.createElement(TableBody,null,customers.slice(0,limit).map(function(customer){return/*#__PURE__*/React.createElement(TableRow,{hover:true,key:customer.id,selected:selectedCustomerIds.indexOf(customer.id)!==-1},/*#__PURE__*/React.createElement(TableCell,{padding:\"checkbox\"},/*#__PURE__*/React.createElement(Checkbox,{checked:selectedCustomerIds.indexOf(customer.id)!==-1,onChange:function onChange(event){return handleSelectOne(event,customer.id);},value:\"true\"})),/*#__PURE__*/React.createElement(TableCell,null,/*#__PURE__*/React.createElement(Box,{alignItems:\"center\",display:\"flex\"},/*#__PURE__*/React.createElement(Avatar,{className:classes.avatar,src:customer.avatarUrl},getInitials(customer.name)),/*#__PURE__*/React.createElement(Typography,{color:\"textPrimary\",variant:\"body1\"},customer.name))),/*#__PURE__*/React.createElement(TableCell,null,customer.email),/*#__PURE__*/React.createElement(TableCell,null,\"\".concat(customer.address.city,\", \").concat(customer.address.state,\", \").concat(customer.address.country)),/*#__PURE__*/React.createElement(TableCell,null,customer.phone),/*#__PURE__*/React.createElement(TableCell,null,moment(customer.createdAt).format('DD/MM/YYYY')));}))))),/*#__PURE__*/React.createElement(TablePagination,{component:\"div\",count:customers.length,onChangePage:handlePageChange,onChangeRowsPerPage:handleLimitChange,page:page,rowsPerPage:limit,rowsPerPageOptions:[5,10,25]}));};export default Results;","map":{"version":3,"sources":["D:/Projects/react-material-dashboard-master/src/views/customer/CustomerListView/Results.js"],"names":["React","useState","clsx","moment","PerfectScrollbar","Avatar","Box","Card","Checkbox","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","Typography","makeStyles","getInitials","useStyles","theme","root","avatar","marginRight","spacing","Results","className","customers","rest","classes","selectedCustomerIds","setSelectedCustomerIds","limit","setLimit","page","setPage","handleSelectAll","event","newSelectedCustomerIds","target","checked","map","customer","id","handleSelectOne","selectedIndex","indexOf","concat","slice","length","handleLimitChange","value","handlePageChange","newPage","avatarUrl","name","email","address","city","state","country","phone","createdAt","format"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Results = ({ className, customers, ...rest }) => {\n  const classes = useStyles();\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n\n  const handleSelectAll = (event) => {\n    let newSelectedCustomerIds;\n\n    if (event.target.checked) {\n      newSelectedCustomerIds = customers.map((customer) => customer.id);\n    } else {\n      newSelectedCustomerIds = [];\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCustomerIds.indexOf(id);\n    let newSelectedCustomerIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\n        selectedCustomerIds.slice(0, selectedIndex),\n        selectedCustomerIds.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <PerfectScrollbar>\n        <Box minWidth={1050}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedCustomerIds.length === customers.length}\n                    color=\"primary\"\n                    indeterminate={\n                      selectedCustomerIds.length > 0\n                      && selectedCustomerIds.length < customers.length\n                    }\n                    onChange={handleSelectAll}\n                  />\n                </TableCell>\n                <TableCell>\n                  Name\n                </TableCell>\n                <TableCell>\n                  Email\n                </TableCell>\n                <TableCell>\n                  Location\n                </TableCell>\n                <TableCell>\n                  Phone\n                </TableCell>\n                <TableCell>\n                  Registration date\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {customers.slice(0, limit).map((customer) => (\n                <TableRow\n                  hover\n                  key={customer.id}\n                  selected={selectedCustomerIds.indexOf(customer.id) !== -1}\n                >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedCustomerIds.indexOf(customer.id) !== -1}\n                      onChange={(event) => handleSelectOne(event, customer.id)}\n                      value=\"true\"\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Box\n                      alignItems=\"center\"\n                      display=\"flex\"\n                    >\n                      <Avatar\n                        className={classes.avatar}\n                        src={customer.avatarUrl}\n                      >\n                        {getInitials(customer.name)}\n                      </Avatar>\n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                      >\n                        {customer.name}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {customer.email}\n                  </TableCell>\n                  <TableCell>\n                    {`${customer.address.city}, ${customer.address.state}, ${customer.address.country}`}\n                  </TableCell>\n                  <TableCell>\n                    {customer.phone}\n                  </TableCell>\n                  <TableCell>\n                    {moment(customer.createdAt).format('DD/MM/YYYY')}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={customers.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  customers: PropTypes.array.isRequired\n};\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}