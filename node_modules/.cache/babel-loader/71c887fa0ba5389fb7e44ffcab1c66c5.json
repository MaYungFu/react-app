{"ast":null,"code":"import _slicedToArray from\"D:\\\\Projects\\\\react-material-dashboard-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"D:\\\\Projects\\\\react-material-dashboard-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";import React,{useState}from'react';import clsx from'clsx';import{v4 as uuid}from'uuid';import moment from'moment';import{Box,Button,Card,CardHeader,Divider,IconButton,List,ListItem,ListItemAvatar,ListItemText,makeStyles}from'@material-ui/core';import MoreVertIcon from'@material-ui/icons/MoreVert';import ArrowRightIcon from'@material-ui/icons/ArrowRight';var data=[{id:uuid(),name:'Dropbox',imageUrl:'/static/images/products/product_1.png',updatedAt:moment().subtract(2,'hours')},{id:uuid(),name:'Medium Corporation',imageUrl:'/static/images/products/product_2.png',updatedAt:moment().subtract(2,'hours')},{id:uuid(),name:'Slack',imageUrl:'/static/images/products/product_3.png',updatedAt:moment().subtract(3,'hours')},{id:uuid(),name:'Lyft',imageUrl:'/static/images/products/product_4.png',updatedAt:moment().subtract(5,'hours')},{id:uuid(),name:'GitHub',imageUrl:'/static/images/products/product_5.png',updatedAt:moment().subtract(9,'hours')}];var useStyles=makeStyles({root:{height:'100%'},image:{height:48,width:48}});var LatestProducts=function LatestProducts(_ref){var className=_ref.className,rest=_objectWithoutProperties(_ref,[\"className\"]);var classes=useStyles();var _useState=useState(data),_useState2=_slicedToArray(_useState,1),products=_useState2[0];return/*#__PURE__*/React.createElement(Card,Object.assign({className:clsx(classes.root,className)},rest),/*#__PURE__*/React.createElement(CardHeader,{subtitle:\"\".concat(products.length,\" in total\"),title:\"Latest Products\"}),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(List,null,products.map(function(product,i){return/*#__PURE__*/React.createElement(ListItem,{divider:i<products.length-1,key:product.id},/*#__PURE__*/React.createElement(ListItemAvatar,null,/*#__PURE__*/React.createElement(\"img\",{alt:\"Product\",className:classes.image,src:product.imageUrl})),/*#__PURE__*/React.createElement(ListItemText,{primary:product.name,secondary:\"Updated \".concat(product.updatedAt.fromNow())}),/*#__PURE__*/React.createElement(IconButton,{edge:\"end\",size:\"small\"},/*#__PURE__*/React.createElement(MoreVertIcon,null)));})),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(Box,{display:\"flex\",justifyContent:\"flex-end\",p:2},/*#__PURE__*/React.createElement(Button,{color:\"primary\",endIcon:/*#__PURE__*/React.createElement(ArrowRightIcon,null),size:\"small\",variant:\"text\"},\"View all\")));};export default LatestProducts;","map":{"version":3,"sources":["D:/Projects/react-material-dashboard-master/src/views/reports/DashboardView/LatestProducts.js"],"names":["React","useState","clsx","v4","uuid","moment","Box","Button","Card","CardHeader","Divider","IconButton","List","ListItem","ListItemAvatar","ListItemText","makeStyles","MoreVertIcon","ArrowRightIcon","data","id","name","imageUrl","updatedAt","subtract","useStyles","root","height","image","width","LatestProducts","className","rest","classes","products","length","map","product","i","fromNow"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { v4 as uuid } from 'uuid';\nimport moment from 'moment';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles\n} from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst data = [\n  {\n    id: uuid(),\n    name: 'Dropbox',\n    imageUrl: '/static/images/products/product_1.png',\n    updatedAt: moment().subtract(2, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Medium Corporation',\n    imageUrl: '/static/images/products/product_2.png',\n    updatedAt: moment().subtract(2, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Slack',\n    imageUrl: '/static/images/products/product_3.png',\n    updatedAt: moment().subtract(3, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Lyft',\n    imageUrl: '/static/images/products/product_4.png',\n    updatedAt: moment().subtract(5, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'GitHub',\n    imageUrl: '/static/images/products/product_5.png',\n    updatedAt: moment().subtract(9, 'hours')\n  }\n];\n\nconst useStyles = makeStyles(({\n  root: {\n    height: '100%'\n  },\n  image: {\n    height: 48,\n    width: 48\n  }\n}));\n\nconst LatestProducts = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [products] = useState(data);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        subtitle={`${products.length} in total`}\n        title=\"Latest Products\"\n      />\n      <Divider />\n      <List>\n        {products.map((product, i) => (\n          <ListItem\n            divider={i < products.length - 1}\n            key={product.id}\n          >\n            <ListItemAvatar>\n              <img\n                alt=\"Product\"\n                className={classes.image}\n                src={product.imageUrl}\n              />\n            </ListItemAvatar>\n            <ListItemText\n              primary={product.name}\n              secondary={`Updated ${product.updatedAt.fromNow()}`}\n            />\n            <IconButton\n              edge=\"end\"\n              size=\"small\"\n            >\n              <MoreVertIcon />\n            </IconButton>\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        p={2}\n      >\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          View all\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nLatestProducts.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestProducts;\n"]},"metadata":{},"sourceType":"module"}